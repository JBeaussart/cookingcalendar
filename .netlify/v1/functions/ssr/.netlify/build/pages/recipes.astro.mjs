import { c as createComponent, i as renderComponent, r as renderTemplate, f as addAttribute, m as maybeRenderHead } from '../chunks/astro/server_B-OLKkAn.mjs';
import 'kleur/colors';
import { $ as $$Layout } from '../chunks/Layout_CurJWU1x.mjs';
import { d as db } from '../chunks/firebase_De7FOwIs.mjs';
import { getDocs, collection } from 'firebase/firestore';
export { renderers } from '../renderers.mjs';

var __freeze = Object.freeze;
var __defProp = Object.defineProperty;
var __template = (cooked, raw) => __freeze(__defProp(cooked, "raw", { value: __freeze(raw || cooked.slice()) }));
var _a;
const $$Index = createComponent(async ($$result, $$props, $$slots) => {
  const snap = await getDocs(collection(db, "recipes"));
  const recipes = snap.docs.map((d) => ({ id: d.id, ...d.data() }));
  const RECIPES_ENC = encodeURIComponent(JSON.stringify(recipes));
  return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": "Recettes" }, { "default": async ($$result2) => renderTemplate(_a || (_a = __template([" ", '<div class="mx-auto max-w-6xl px-4 py-8"> <!-- Barre titre + actions --> <div class="flex flex-col gap-3 sm:flex-row sm:items-center sm:justify-between"> <h1 class="text-2xl font-bold text-gray-900 text-center sm:text-left">\u{1F4D6} Recettes disponibles</h1> <div class="flex items-center gap-2 justify-center"> <button id="openAddModal" class="inline-flex items-center gap-2 rounded-lg bg-emerald-600 px-3 py-2 text-white text-sm font-medium shadow hover:bg-emerald-700 active:scale-[0.98] transition">\n\u2795 Ajouter une recette\n</button> </div> </div> <!-- Barre de filtres --> <div class="mt-5 flex flex-col sm:flex-row gap-3 sm:gap-4 sm:items-center sm:justify-between"> <div class="w-full sm:max-w-md"> <input id="searchInput" type="text" placeholder="Rechercher une recette\u2026" class="w-full rounded-lg border border-gray-300 px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-400"> </div> <div class="flex w-full sm:w-auto items-center gap-4"> <div class="flex items-center gap-2"> <label for="saltFilter" class="text-sm text-gray-700">Type</label> <select id="saltFilter" class="rounded-lg border border-gray-300 px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-400"> <option value="all">Tous</option> <option value="salty">Sal\xE9</option> <option value="sweet">Sucr\xE9</option> </select> </div> <label class="inline-flex items-center gap-2 select-none"> <input id="mamanFilter" type="checkbox" class="h-5 w-5 rounded border-gray-300 text-blue-600 focus:ring-2 focus:ring-blue-400"> <span class="text-sm text-gray-800">Seulement recettes de maman</span> </label> </div> </div> <!-- Grille --> <div id="grid" class="mt-6 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4"></div> <!-- Donn\xE9es encod\xE9es --> <div id="recipes-data"', ' class="hidden"></div> </div>  <div id="addModal" class="fixed inset-0 z-50 hidden"> <div class="absolute inset-0 bg-black/40"></div> <div class="relative mx-auto my-8 max-w-2xl rounded-2xl bg-white p-5 shadow-xl"> <div class="flex items-center justify-between mb-3"> <h2 class="text-lg font-semibold text-gray-900">Ajouter une recette</h2> <button id="closeAddModal" class="rounded-md p-2 hover:bg-gray-100" aria-label="Fermer">\u2715</button> </div> <form id="addRecipeForm" class="space-y-4"> <div> <label class="block text-sm font-medium text-gray-700 mb-1">Titre *</label> <input id="rTitle" type="text" class="w-full rounded-lg border border-gray-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-emerald-400" required> </div> <div> <label class="block text-sm font-medium text-gray-700 mb-1">Image (URL)</label> <input id="rImage" type="url" placeholder="https://\u2026" class="w-full rounded-lg border border-gray-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-emerald-400"> </div> <!-- Booleans --> <div class="grid grid-cols-1 sm:grid-cols-2 gap-3"> <label class="inline-flex items-center gap-2"> <input id="rMaman" type="checkbox" class="h-5 w-5 rounded border-gray-300 text-emerald-600 focus:ring-2 focus:ring-emerald-400"> <span class="text-sm text-gray-800">Recette de maman</span> </label> <div> <label class="block text-sm font-medium text-gray-700 mb-1">Type *</label> <select id="rSalt" class="w-full rounded-lg border border-gray-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-emerald-400"> <option value="salty">Sal\xE9</option> <option value="sweet">Sucr\xE9</option> </select> </div> </div> <!-- Ingr\xE9dients --> <div> <div class="flex items-center justify-between mb-2"> <label class="block text-sm font-medium text-gray-700">Ingr\xE9dients *</label> <button type="button" id="addIngRow" class="text-emerald-600 hover:text-emerald-700 text-sm">\u2795 Ajouter un ingr\xE9dient</button> </div> <div id="ingList" class="space-y-2"> <!-- lignes ajout\xE9es en JS --> </div> </div> <!-- \xC9tapes --> <div> <div class="flex items-center justify-between mb-2"> <label class="block text-sm font-medium text-gray-700">\xC9tapes *</label> <button type="button" id="addStepRow" class="text-emerald-600 hover:text-emerald-700 text-sm">\u2795 Ajouter une \xE9tape</button> </div> <div id="stepsList" class="space-y-2"> <!-- lignes ajout\xE9es en JS --> </div> </div> <div class="flex items-center justify-end gap-3 pt-2"> <button type="button" id="cancelAdd" class="rounded-lg border border-gray-300 px-4 py-2 text-sm hover:bg-gray-50">Annuler</button> <button type="submit" class="inline-flex items-center gap-2 rounded-lg bg-emerald-600 px-4 py-2 text-sm font-medium text-white hover:bg-emerald-700 active:scale-[0.98] transition">\nEnregistrer\n</button> </div> <p id="addStatus" class="text-sm text-gray-500 mt-1"></p> </form> </div> </div> <script>\n    document.addEventListener("DOMContentLoaded", () => {\n      const DEFAULT_IMG = "/images/default-recipe.jpg";\n\n      // Donn\xE9es\n      const dataEl = document.getElementById("recipes-data");\n      const enc = dataEl?.getAttribute("data-recipes") || "";\n      /** @type {{id:string,title:string,image?:string,maman?:boolean,salt?:boolean}[]} */\n      let ALL = [];\n      try { ALL = JSON.parse(decodeURIComponent(enc)) || []; }\n      catch (e) { console.error("Erreur de d\xE9codage des recettes:", e); ALL = []; }\n\n      // UI\n      const grid = document.getElementById("grid");\n      const searchInput = document.getElementById("searchInput");\n      const mamanFilter = document.getElementById("mamanFilter");\n      const saltFilter = document.getElementById("saltFilter");\n\n      // Param depuis planning : /recipes?day=lundi\n      const params = new URLSearchParams(window.location.search);\n      const dayParam = (params.get("day") || "").toLowerCase();\n\n      const normalize = (s) =>\n        String(s || "").normalize("NFD").replace(/[\\u0300-\\u036f]/g, "").toLowerCase().trim();\n\n      function makeBadge(text, cls) {\n        const span = document.createElement("span");\n        span.className = `inline-flex items-center gap-1 rounded-full px-2 py-0.5 border ${cls}`;\n        span.textContent = text;\n        return span;\n      }\n\n      function makeCard(r) {\n        // Carte cliquable\n        const card = document.createElement("div");\n        card.className = "group relative flex flex-col rounded-xl border border-gray-200 bg-white shadow-sm hover:shadow-md transition overflow-hidden cursor-pointer";\n        card.addEventListener("click", () => {\n          const q = dayParam ? `?day=${encodeURIComponent(dayParam)}` : "";\n          window.location.href = `/recipes/${r.id}${q}`;\n        });\n\n        // \u2795 en haut-droite si dayParam\n        if (dayParam) {\n          const addBtn = document.createElement("button");\n          addBtn.type = "button";\n          addBtn.className =\n            "absolute right-2 top-2 z-10 inline-flex h-9 w-9 items-center justify-center rounded-full bg-white/90 " +\n            "text-green-600 ring-1 ring-green-200 shadow hover:bg-white hover:text-green-700 hover:ring-green-300 transition";\n          addBtn.title = `Ajouter au ${dayParam}`;\n          addBtn.setAttribute("aria-label", `Ajouter "${r.title}" au ${dayParam}`);\n          addBtn.innerHTML =\n            \'<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 24 24" fill="none" stroke="currentColor">\' +\n            \'<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16M20 12H4" />\' +\n            \'</svg>\';\n          addBtn.addEventListener("click", async (e) => {\n            e.stopPropagation();\n            e.preventDefault();\n            try {\n              const res = await fetch("/api/assign-recipe", {\n                method: "POST",\n                headers: { "Content-Type": "application/json" },\n                body: JSON.stringify({ day: dayParam, id: r.id }),\n              });\n              if (!res.ok) throw new Error("assign failed");\n              window.location.href = "/"; // ta page planning\n            } catch (err) {\n              console.error("Assignation \xE9chou\xE9e:", err);\n              alert("Impossible d\u2019ajouter la recette au planning.");\n            }\n          });\n          card.appendChild(addBtn);\n        }\n\n        // Image\n        const imgWrap = document.createElement("div");\n        imgWrap.className = "aspect-[4/3] w-full overflow-hidden bg-gray-100";\n        const img = document.createElement("img");\n        img.loading = "lazy";\n        img.className = "h-full w-full object-cover group-hover:scale-[1.03] transition-transform duration-300";\n        img.src = r.image || DEFAULT_IMG;\n        img.alt = r.title || "";\n        img.onerror = () => { img.src = DEFAULT_IMG; };\n        imgWrap.appendChild(img);\n        card.appendChild(imgWrap);\n\n        // Corps\n        const body = document.createElement("div");\n        body.className = "flex-1 flex flex-col p-3";\n\n        const title = document.createElement("span");\n        title.className = "text-sm font-semibold text-gray-900 line-clamp-2 group-hover:underline";\n        title.textContent = r.title || "";\n        body.appendChild(title);\n\n        const meta = document.createElement("div");\n        meta.className = "mt-2 text-xs text-gray-500 flex items-center gap-2";\n        if (r.maman === true) {\n          meta.appendChild(makeBadge("Recette de maman", "border-pink-300 text-pink-700 bg-pink-50"));\n        }\n        if (typeof r.salt === "boolean") {\n          meta.appendChild(makeBadge(r.salt ? "Sal\xE9" : "Sucr\xE9", "border-gray-200 text-gray-600"));\n        }\n        body.appendChild(meta);\n\n        card.appendChild(body);\n        return card;\n      }\n\n      function render(list) {\n        grid.innerHTML = "";\n        if (!Array.isArray(list) || list.length === 0) {\n          const empty = document.createElement("div");\n          empty.className = "col-span-full text-center text-gray-500";\n          empty.textContent = "Aucune recette ne correspond \xE0 votre recherche.";\n          grid.appendChild(empty);\n          return;\n        }\n        list.forEach((r) => grid.appendChild(makeCard(r)));\n      }\n\n      function apply() {\n        const q = normalize(searchInput.value);\n        const mamanOnly = mamanFilter.checked;\n        const mode = saltFilter.value; // all | salty | sweet\n\n        let list = ALL.filter((r) => normalize(r.title).includes(q));\n        if (mamanOnly) list = list.filter((r) => r.maman === true);\n        if (mode === "salty") list = list.filter((r) => r.salt === true);\n        else if (mode === "sweet") list = list.filter((r) => r.salt === false);\n\n        list.sort((a, b) => a.title.localeCompare(b.title, "fr"));\n        render(list);\n      }\n\n      searchInput.addEventListener("input", apply);\n      mamanFilter.addEventListener("change", apply);\n      saltFilter.addEventListener("change", apply);\n\n      apply();\n\n      // ---------- Modal d\u2019ajout ----------\n      const addModal = document.getElementById("addModal");\n      const openAddModal = document.getElementById("openAddModal");\n      const closeAddModal = document.getElementById("closeAddModal");\n      const cancelAdd = document.getElementById("cancelAdd");\n      const addRecipeForm = document.getElementById("addRecipeForm");\n      const addStatus = document.getElementById("addStatus");\n\n      const rTitle = document.getElementById("rTitle");\n      const rImage = document.getElementById("rImage");\n      const rMaman = document.getElementById("rMaman");\n      const rSalt = document.getElementById("rSalt");\n      const ingList = document.getElementById("ingList");\n      const addIngRow = document.getElementById("addIngRow");\n      const stepsList = document.getElementById("stepsList");\n      const addStepRow = document.getElementById("addStepRow");\n\n      function openModal() { addModal.classList.remove("hidden"); }\n      function closeModal() { addModal.classList.add("hidden"); addStatus.textContent = ""; }\n\n      openAddModal.addEventListener("click", () => {\n        // reset formulaire\n        addRecipeForm.reset();\n        ingList.innerHTML = "";\n        stepsList.innerHTML = "";\n        addIngredientRow();\n        addStep();\n        openModal();\n      });\n\n      closeAddModal.addEventListener("click", closeModal);\n      cancelAdd.addEventListener("click", (e) => { e.preventDefault(); closeModal(); });\n      addModal.addEventListener("click", (e) => {\n        if (e.target === addModal.firstElementChild) closeModal(); // clic sur overlay\n      });\n\n      function addIngredientRow(values = { item: "", quantity: "", unit: "" }) {\n        const row = document.createElement("div");\n        row.className = "ingredient-row grid grid-cols-6 gap-2";\n        row.innerHTML = `\n          <input type="text" placeholder="Ingr\xE9dient" class="col-span-3 rounded-lg border border-gray-300 px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-emerald-400" value="${values.item || ""}" required>\n          <input type="number" step="any" placeholder="Qt\xE9" class="col-span-2 rounded-lg border border-gray-300 px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-emerald-400" value="${values.quantity ?? ""}">\n          <input type="text" placeholder="Unit\xE9" class="col-span-1 rounded-lg border border-gray-300 px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-emerald-400" value="${values.unit || ""}">\n        `;\n        ingList.appendChild(row);\n      }\n\n      function addStep(value = "") {\n        const row = document.createElement("div");\n        row.className = "step-row";\n        row.innerHTML = `\n          <input type="text" placeholder="D\xE9crire l\u2019\xE9tape\u2026" class="w-full rounded-lg border border-gray-300 px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-emerald-400" value="${value}">\n        `;\n        stepsList.appendChild(row);\n      }\n\n      addIngRow.addEventListener("click", () => addIngredientRow());\n      addStepRow.addEventListener("click", () => addStep());\n\n      addRecipeForm.addEventListener("submit", async (e) => {\n        e.preventDefault();\n        addStatus.textContent = "Enregistrement\u2026";\n\n        // R\xE9cup ingr\xE9dients\n        const ingRows = Array.from(ingList.querySelectorAll(".ingredient-row"));\n        const ingredients = ingRows.map((row) => {\n          const [itemEl, qtyEl, unitEl] = row.querySelectorAll("input");\n          const item = itemEl.value.trim();\n          const qRaw = qtyEl.value.trim();\n          const quantity = qRaw === "" ? undefined : Number(qRaw);\n          const unit = unitEl.value.trim();\n          if (!item) return null;\n          const obj = { item };\n          if (Number.isFinite(quantity)) obj.quantity = quantity;\n          if (unit) obj.unit = unit;\n          return obj;\n        }).filter(Boolean);\n\n        // R\xE9cup \xE9tapes\n        const stepRows = Array.from(stepsList.querySelectorAll(".step-row input"));\n        const steps = stepRows.map(el => el.value.trim()).filter(Boolean);\n\n        // salt: "salty" => true ; "sweet" => false\n        const salt = (rSalt.value === "salty");\n\n        const payload = {\n          title: rTitle.value.trim(),\n          image: rImage.value.trim(),\n          maman: !!rMaman.checked,\n          salt,\n          ingredients,\n          steps,\n        };\n\n        try {\n          const res = await fetch("/api/add-recipe", {\n            method: "POST",\n            headers: { "Content-Type": "application/json" },\n            body: JSON.stringify(payload),\n          });\n          if (!res.ok) {\n            const txt = await res.text().catch(() => "");\n            throw new Error("HTTP " + res.status + " " + txt);\n          }\n          const data = await res.json().catch(() => ({}));\n          addStatus.textContent = "\u2705 Recette ajout\xE9e";\n          // rechargement pour voir la nouvelle recette\n          setTimeout(() => {\n            window.location.reload();\n          }, 400);\n        } catch (err) {\n          console.error(err);\n          addStatus.textContent = "\u274C Erreur lors de l\'ajout";\n        }\n      });\n    });\n  <\/script> '], [" ", '<div class="mx-auto max-w-6xl px-4 py-8"> <!-- Barre titre + actions --> <div class="flex flex-col gap-3 sm:flex-row sm:items-center sm:justify-between"> <h1 class="text-2xl font-bold text-gray-900 text-center sm:text-left">\u{1F4D6} Recettes disponibles</h1> <div class="flex items-center gap-2 justify-center"> <button id="openAddModal" class="inline-flex items-center gap-2 rounded-lg bg-emerald-600 px-3 py-2 text-white text-sm font-medium shadow hover:bg-emerald-700 active:scale-[0.98] transition">\n\u2795 Ajouter une recette\n</button> </div> </div> <!-- Barre de filtres --> <div class="mt-5 flex flex-col sm:flex-row gap-3 sm:gap-4 sm:items-center sm:justify-between"> <div class="w-full sm:max-w-md"> <input id="searchInput" type="text" placeholder="Rechercher une recette\u2026" class="w-full rounded-lg border border-gray-300 px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-400"> </div> <div class="flex w-full sm:w-auto items-center gap-4"> <div class="flex items-center gap-2"> <label for="saltFilter" class="text-sm text-gray-700">Type</label> <select id="saltFilter" class="rounded-lg border border-gray-300 px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-400"> <option value="all">Tous</option> <option value="salty">Sal\xE9</option> <option value="sweet">Sucr\xE9</option> </select> </div> <label class="inline-flex items-center gap-2 select-none"> <input id="mamanFilter" type="checkbox" class="h-5 w-5 rounded border-gray-300 text-blue-600 focus:ring-2 focus:ring-blue-400"> <span class="text-sm text-gray-800">Seulement recettes de maman</span> </label> </div> </div> <!-- Grille --> <div id="grid" class="mt-6 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4"></div> <!-- Donn\xE9es encod\xE9es --> <div id="recipes-data"', ' class="hidden"></div> </div>  <div id="addModal" class="fixed inset-0 z-50 hidden"> <div class="absolute inset-0 bg-black/40"></div> <div class="relative mx-auto my-8 max-w-2xl rounded-2xl bg-white p-5 shadow-xl"> <div class="flex items-center justify-between mb-3"> <h2 class="text-lg font-semibold text-gray-900">Ajouter une recette</h2> <button id="closeAddModal" class="rounded-md p-2 hover:bg-gray-100" aria-label="Fermer">\u2715</button> </div> <form id="addRecipeForm" class="space-y-4"> <div> <label class="block text-sm font-medium text-gray-700 mb-1">Titre *</label> <input id="rTitle" type="text" class="w-full rounded-lg border border-gray-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-emerald-400" required> </div> <div> <label class="block text-sm font-medium text-gray-700 mb-1">Image (URL)</label> <input id="rImage" type="url" placeholder="https://\u2026" class="w-full rounded-lg border border-gray-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-emerald-400"> </div> <!-- Booleans --> <div class="grid grid-cols-1 sm:grid-cols-2 gap-3"> <label class="inline-flex items-center gap-2"> <input id="rMaman" type="checkbox" class="h-5 w-5 rounded border-gray-300 text-emerald-600 focus:ring-2 focus:ring-emerald-400"> <span class="text-sm text-gray-800">Recette de maman</span> </label> <div> <label class="block text-sm font-medium text-gray-700 mb-1">Type *</label> <select id="rSalt" class="w-full rounded-lg border border-gray-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-emerald-400"> <option value="salty">Sal\xE9</option> <option value="sweet">Sucr\xE9</option> </select> </div> </div> <!-- Ingr\xE9dients --> <div> <div class="flex items-center justify-between mb-2"> <label class="block text-sm font-medium text-gray-700">Ingr\xE9dients *</label> <button type="button" id="addIngRow" class="text-emerald-600 hover:text-emerald-700 text-sm">\u2795 Ajouter un ingr\xE9dient</button> </div> <div id="ingList" class="space-y-2"> <!-- lignes ajout\xE9es en JS --> </div> </div> <!-- \xC9tapes --> <div> <div class="flex items-center justify-between mb-2"> <label class="block text-sm font-medium text-gray-700">\xC9tapes *</label> <button type="button" id="addStepRow" class="text-emerald-600 hover:text-emerald-700 text-sm">\u2795 Ajouter une \xE9tape</button> </div> <div id="stepsList" class="space-y-2"> <!-- lignes ajout\xE9es en JS --> </div> </div> <div class="flex items-center justify-end gap-3 pt-2"> <button type="button" id="cancelAdd" class="rounded-lg border border-gray-300 px-4 py-2 text-sm hover:bg-gray-50">Annuler</button> <button type="submit" class="inline-flex items-center gap-2 rounded-lg bg-emerald-600 px-4 py-2 text-sm font-medium text-white hover:bg-emerald-700 active:scale-[0.98] transition">\nEnregistrer\n</button> </div> <p id="addStatus" class="text-sm text-gray-500 mt-1"></p> </form> </div> </div> <script>\n    document.addEventListener("DOMContentLoaded", () => {\n      const DEFAULT_IMG = "/images/default-recipe.jpg";\n\n      // Donn\xE9es\n      const dataEl = document.getElementById("recipes-data");\n      const enc = dataEl?.getAttribute("data-recipes") || "";\n      /** @type {{id:string,title:string,image?:string,maman?:boolean,salt?:boolean}[]} */\n      let ALL = [];\n      try { ALL = JSON.parse(decodeURIComponent(enc)) || []; }\n      catch (e) { console.error("Erreur de d\xE9codage des recettes:", e); ALL = []; }\n\n      // UI\n      const grid = document.getElementById("grid");\n      const searchInput = document.getElementById("searchInput");\n      const mamanFilter = document.getElementById("mamanFilter");\n      const saltFilter = document.getElementById("saltFilter");\n\n      // Param depuis planning : /recipes?day=lundi\n      const params = new URLSearchParams(window.location.search);\n      const dayParam = (params.get("day") || "").toLowerCase();\n\n      const normalize = (s) =>\n        String(s || "").normalize("NFD").replace(/[\\\\u0300-\\\\u036f]/g, "").toLowerCase().trim();\n\n      function makeBadge(text, cls) {\n        const span = document.createElement("span");\n        span.className = \\`inline-flex items-center gap-1 rounded-full px-2 py-0.5 border \\${cls}\\`;\n        span.textContent = text;\n        return span;\n      }\n\n      function makeCard(r) {\n        // Carte cliquable\n        const card = document.createElement("div");\n        card.className = "group relative flex flex-col rounded-xl border border-gray-200 bg-white shadow-sm hover:shadow-md transition overflow-hidden cursor-pointer";\n        card.addEventListener("click", () => {\n          const q = dayParam ? \\`?day=\\${encodeURIComponent(dayParam)}\\` : "";\n          window.location.href = \\`/recipes/\\${r.id}\\${q}\\`;\n        });\n\n        // \u2795 en haut-droite si dayParam\n        if (dayParam) {\n          const addBtn = document.createElement("button");\n          addBtn.type = "button";\n          addBtn.className =\n            "absolute right-2 top-2 z-10 inline-flex h-9 w-9 items-center justify-center rounded-full bg-white/90 " +\n            "text-green-600 ring-1 ring-green-200 shadow hover:bg-white hover:text-green-700 hover:ring-green-300 transition";\n          addBtn.title = \\`Ajouter au \\${dayParam}\\`;\n          addBtn.setAttribute("aria-label", \\`Ajouter "\\${r.title}" au \\${dayParam}\\`);\n          addBtn.innerHTML =\n            \'<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 24 24" fill="none" stroke="currentColor">\' +\n            \'<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16M20 12H4" />\' +\n            \'</svg>\';\n          addBtn.addEventListener("click", async (e) => {\n            e.stopPropagation();\n            e.preventDefault();\n            try {\n              const res = await fetch("/api/assign-recipe", {\n                method: "POST",\n                headers: { "Content-Type": "application/json" },\n                body: JSON.stringify({ day: dayParam, id: r.id }),\n              });\n              if (!res.ok) throw new Error("assign failed");\n              window.location.href = "/"; // ta page planning\n            } catch (err) {\n              console.error("Assignation \xE9chou\xE9e:", err);\n              alert("Impossible d\u2019ajouter la recette au planning.");\n            }\n          });\n          card.appendChild(addBtn);\n        }\n\n        // Image\n        const imgWrap = document.createElement("div");\n        imgWrap.className = "aspect-[4/3] w-full overflow-hidden bg-gray-100";\n        const img = document.createElement("img");\n        img.loading = "lazy";\n        img.className = "h-full w-full object-cover group-hover:scale-[1.03] transition-transform duration-300";\n        img.src = r.image || DEFAULT_IMG;\n        img.alt = r.title || "";\n        img.onerror = () => { img.src = DEFAULT_IMG; };\n        imgWrap.appendChild(img);\n        card.appendChild(imgWrap);\n\n        // Corps\n        const body = document.createElement("div");\n        body.className = "flex-1 flex flex-col p-3";\n\n        const title = document.createElement("span");\n        title.className = "text-sm font-semibold text-gray-900 line-clamp-2 group-hover:underline";\n        title.textContent = r.title || "";\n        body.appendChild(title);\n\n        const meta = document.createElement("div");\n        meta.className = "mt-2 text-xs text-gray-500 flex items-center gap-2";\n        if (r.maman === true) {\n          meta.appendChild(makeBadge("Recette de maman", "border-pink-300 text-pink-700 bg-pink-50"));\n        }\n        if (typeof r.salt === "boolean") {\n          meta.appendChild(makeBadge(r.salt ? "Sal\xE9" : "Sucr\xE9", "border-gray-200 text-gray-600"));\n        }\n        body.appendChild(meta);\n\n        card.appendChild(body);\n        return card;\n      }\n\n      function render(list) {\n        grid.innerHTML = "";\n        if (!Array.isArray(list) || list.length === 0) {\n          const empty = document.createElement("div");\n          empty.className = "col-span-full text-center text-gray-500";\n          empty.textContent = "Aucune recette ne correspond \xE0 votre recherche.";\n          grid.appendChild(empty);\n          return;\n        }\n        list.forEach((r) => grid.appendChild(makeCard(r)));\n      }\n\n      function apply() {\n        const q = normalize(searchInput.value);\n        const mamanOnly = mamanFilter.checked;\n        const mode = saltFilter.value; // all | salty | sweet\n\n        let list = ALL.filter((r) => normalize(r.title).includes(q));\n        if (mamanOnly) list = list.filter((r) => r.maman === true);\n        if (mode === "salty") list = list.filter((r) => r.salt === true);\n        else if (mode === "sweet") list = list.filter((r) => r.salt === false);\n\n        list.sort((a, b) => a.title.localeCompare(b.title, "fr"));\n        render(list);\n      }\n\n      searchInput.addEventListener("input", apply);\n      mamanFilter.addEventListener("change", apply);\n      saltFilter.addEventListener("change", apply);\n\n      apply();\n\n      // ---------- Modal d\u2019ajout ----------\n      const addModal = document.getElementById("addModal");\n      const openAddModal = document.getElementById("openAddModal");\n      const closeAddModal = document.getElementById("closeAddModal");\n      const cancelAdd = document.getElementById("cancelAdd");\n      const addRecipeForm = document.getElementById("addRecipeForm");\n      const addStatus = document.getElementById("addStatus");\n\n      const rTitle = document.getElementById("rTitle");\n      const rImage = document.getElementById("rImage");\n      const rMaman = document.getElementById("rMaman");\n      const rSalt = document.getElementById("rSalt");\n      const ingList = document.getElementById("ingList");\n      const addIngRow = document.getElementById("addIngRow");\n      const stepsList = document.getElementById("stepsList");\n      const addStepRow = document.getElementById("addStepRow");\n\n      function openModal() { addModal.classList.remove("hidden"); }\n      function closeModal() { addModal.classList.add("hidden"); addStatus.textContent = ""; }\n\n      openAddModal.addEventListener("click", () => {\n        // reset formulaire\n        addRecipeForm.reset();\n        ingList.innerHTML = "";\n        stepsList.innerHTML = "";\n        addIngredientRow();\n        addStep();\n        openModal();\n      });\n\n      closeAddModal.addEventListener("click", closeModal);\n      cancelAdd.addEventListener("click", (e) => { e.preventDefault(); closeModal(); });\n      addModal.addEventListener("click", (e) => {\n        if (e.target === addModal.firstElementChild) closeModal(); // clic sur overlay\n      });\n\n      function addIngredientRow(values = { item: "", quantity: "", unit: "" }) {\n        const row = document.createElement("div");\n        row.className = "ingredient-row grid grid-cols-6 gap-2";\n        row.innerHTML = \\`\n          <input type="text" placeholder="Ingr\xE9dient" class="col-span-3 rounded-lg border border-gray-300 px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-emerald-400" value="\\${values.item || ""}" required>\n          <input type="number" step="any" placeholder="Qt\xE9" class="col-span-2 rounded-lg border border-gray-300 px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-emerald-400" value="\\${values.quantity ?? ""}">\n          <input type="text" placeholder="Unit\xE9" class="col-span-1 rounded-lg border border-gray-300 px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-emerald-400" value="\\${values.unit || ""}">\n        \\`;\n        ingList.appendChild(row);\n      }\n\n      function addStep(value = "") {\n        const row = document.createElement("div");\n        row.className = "step-row";\n        row.innerHTML = \\`\n          <input type="text" placeholder="D\xE9crire l\u2019\xE9tape\u2026" class="w-full rounded-lg border border-gray-300 px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-emerald-400" value="\\${value}">\n        \\`;\n        stepsList.appendChild(row);\n      }\n\n      addIngRow.addEventListener("click", () => addIngredientRow());\n      addStepRow.addEventListener("click", () => addStep());\n\n      addRecipeForm.addEventListener("submit", async (e) => {\n        e.preventDefault();\n        addStatus.textContent = "Enregistrement\u2026";\n\n        // R\xE9cup ingr\xE9dients\n        const ingRows = Array.from(ingList.querySelectorAll(".ingredient-row"));\n        const ingredients = ingRows.map((row) => {\n          const [itemEl, qtyEl, unitEl] = row.querySelectorAll("input");\n          const item = itemEl.value.trim();\n          const qRaw = qtyEl.value.trim();\n          const quantity = qRaw === "" ? undefined : Number(qRaw);\n          const unit = unitEl.value.trim();\n          if (!item) return null;\n          const obj = { item };\n          if (Number.isFinite(quantity)) obj.quantity = quantity;\n          if (unit) obj.unit = unit;\n          return obj;\n        }).filter(Boolean);\n\n        // R\xE9cup \xE9tapes\n        const stepRows = Array.from(stepsList.querySelectorAll(".step-row input"));\n        const steps = stepRows.map(el => el.value.trim()).filter(Boolean);\n\n        // salt: "salty" => true ; "sweet" => false\n        const salt = (rSalt.value === "salty");\n\n        const payload = {\n          title: rTitle.value.trim(),\n          image: rImage.value.trim(),\n          maman: !!rMaman.checked,\n          salt,\n          ingredients,\n          steps,\n        };\n\n        try {\n          const res = await fetch("/api/add-recipe", {\n            method: "POST",\n            headers: { "Content-Type": "application/json" },\n            body: JSON.stringify(payload),\n          });\n          if (!res.ok) {\n            const txt = await res.text().catch(() => "");\n            throw new Error("HTTP " + res.status + " " + txt);\n          }\n          const data = await res.json().catch(() => ({}));\n          addStatus.textContent = "\u2705 Recette ajout\xE9e";\n          // rechargement pour voir la nouvelle recette\n          setTimeout(() => {\n            window.location.reload();\n          }, 400);\n        } catch (err) {\n          console.error(err);\n          addStatus.textContent = "\u274C Erreur lors de l\'ajout";\n        }\n      });\n    });\n  <\/script> '])), maybeRenderHead(), addAttribute(RECIPES_ENC, "data-recipes")) })}`;
}, "/Users/jeremy/code/JBeaussart/cookingcalendar/src/pages/recipes/index.astro", void 0);

const $$file = "/Users/jeremy/code/JBeaussart/cookingcalendar/src/pages/recipes/index.astro";
const $$url = "/recipes";

const _page = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
  __proto__: null,
  default: $$Index,
  file: $$file,
  url: $$url
}, Symbol.toStringTag, { value: 'Module' }));

const page = () => _page;

export { page };
