import { c as createComponent, d as createAstro, i as renderComponent, r as renderTemplate, j as Fragment, f as addAttribute, m as maybeRenderHead } from '../../chunks/astro/server_B-OLKkAn.mjs';
import 'kleur/colors';
import { $ as $$Layout } from '../../chunks/Layout_CurJWU1x.mjs';
import { d as db } from '../../chunks/firebase_De7FOwIs.mjs';
import { doc, getDoc } from 'firebase/firestore';
export { renderers } from '../../renderers.mjs';

var __freeze = Object.freeze;
var __defProp = Object.defineProperty;
var __template = (cooked, raw) => __freeze(__defProp(cooked, "raw", { value: __freeze(raw || cooked.slice()) }));
var _a;
const $$Astro = createAstro();
const $$id = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$id;
  const { id } = Astro2.params;
  const recipe = await (async () => {
    try {
      const ref = doc(db, "recipes", id);
      const snap = await getDoc(ref);
      if (!snap.exists()) return null;
      return { id: snap.id, ...snap.data() };
    } catch {
      return null;
    }
  })();
  const DEFAULT_IMG = "/images/default-recipe.jpg";
  return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": recipe?.title || "Recette" }, { "default": async ($$result2) => renderTemplate(_a || (_a = __template([" ", '<div class="container mx-auto px-4 py-12"> ', ' </div> <script>\n    document.addEventListener("DOMContentLoaded", () => {\n      // ----- Bouton + si ?day=... -----\n      const params = new URLSearchParams(window.location.search);\n      const dayParam = (params.get("day") || "").toLowerCase();\n      const addBtnContainer = document.getElementById("addBtnContainer");\n      const dataEl = document.getElementById("recipe-data");\n      const recipeId = dataEl ? dataEl.getAttribute("data-id") : null;\n\n      if (dayParam && recipeId) {\n        const btn = document.createElement("button");\n        btn.type = "button";\n        btn.className =\n          "inline-flex h-10 w-10 items-center justify-center rounded-full bg-white/90 " +\n          "text-green-600 ring-1 ring-green-200 shadow hover:bg-white hover:text-green-700 hover:ring-green-300 transition";\n        btn.title = `Ajouter au ${dayParam}`;\n        btn.setAttribute("aria-label", `Ajouter cette recette au ${dayParam}`);\n        btn.innerHTML =\n          \'<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" viewBox="0 0 24 24" fill="none" stroke="currentColor">\' +\n          \'<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16M20 12H4" />\' +\n          "</svg>";\n        btn.addEventListener("click", async () => {\n          try {\n            const res = await fetch("/api/assign-recipe", {\n              method: "POST",\n              headers: { "Content-Type": "application/json" },\n              body: JSON.stringify({ day: dayParam, id: recipeId }),\n            });\n            if (!res.ok) throw new Error("assign failed");\n            window.location.href = "/";\n          } catch (err) {\n            console.error("Assignation \xE9chou\xE9e:", err);\n            alert("Impossible d\u2019ajouter la recette au planning.");\n          }\n        });\n        addBtnContainer.appendChild(btn);\n      }\n\n      // ----- \xC9dition & suppression -----\n      const openEdit = document.getElementById("openEdit");\n      const editModal = document.getElementById("editModal");\n      const closeEdit = document.getElementById("closeEdit");\n      const cancelEdit = document.getElementById("cancelEdit");\n      const editForm = document.getElementById("editRecipeForm");\n      const editStatus = document.getElementById("editStatus");\n\n      const eTitle = document.getElementById("eTitle");\n      const eImage = document.getElementById("eImage");\n      const eMaman = document.getElementById("eMaman");\n      const eSalt = document.getElementById("eSalt");\n      const ingList = document.getElementById("ingList");\n      const addIngRow = document.getElementById("addIngRow");\n      const stepsList = document.getElementById("stepsList");\n      const addStepRow = document.getElementById("addStepRow");\n\n      function openModal() { editModal.classList.remove("hidden"); }\n      function closeModal() { editModal.classList.add("hidden"); editStatus.textContent = ""; }\n\n      function addIngredientRow(values = { item: "", quantity: "", unit: "" }) {\n        const row = document.createElement("div");\n        row.className = "ingredient-row grid grid-cols-7 gap-2";\n        row.innerHTML = `\n          <input type="text" placeholder="Ingr\xE9dient" class="col-span-3 rounded-lg border border-gray-300 px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-emerald-400" value="${values.item || ""}" required>\n          <input type="number" step="any" placeholder="Qt\xE9" class="col-span-2 rounded-lg border border-gray-300 px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-emerald-400" value="${values.quantity ?? ""}">\n          <input type="text" placeholder="Unit\xE9" class="col-span-1 rounded-lg border border-gray-300 px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-emerald-400" value="${values.unit || ""}">\n          <button type="button" class="col-span-1 rounded-md border border-gray-200 hover:bg-gray-50 text-gray-600 text-sm" title="Supprimer">\u2715</button>\n        `;\n        const delBtn = row.querySelector("button");\n        delBtn.addEventListener("click", () => row.remove());\n        ingList.appendChild(row);\n      }\n\n      function addStepRowEl(value = "") {\n        const row = document.createElement("div");\n        row.className = "step-row grid grid-cols-6 gap-2";\n        row.innerHTML = `\n          <input type="text" placeholder="D\xE9crire l\u2019\xE9tape\u2026" class="col-span-5 w-full rounded-lg border border-gray-300 px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-emerald-400" value="${value}">\n          <button type="button" class="col-span-1 rounded-md border border-gray-200 hover:bg-gray-50 text-gray-600 text-sm" title="Supprimer">\u2715</button>\n        `;\n        const delBtn = row.querySelector("button");\n        delBtn.addEventListener("click", () => row.remove());\n        stepsList.appendChild(row);\n      }\n\n      function fillFormFromDataset() {\n        const d = document.getElementById("recipe-data");\n        if (!d) return;\n        eTitle.value = d.getAttribute("data-title") || "";\n        eImage.value = d.getAttribute("data-image") || "";\n        eMaman.checked = d.getAttribute("data-maman") === "true";\n        eSalt.value = (d.getAttribute("data-salt") === "true") ? "salty" : "sweet";\n\n        ingList.innerHTML = "";\n        let ing = [];\n        try { ing = JSON.parse(decodeURIComponent(d.getAttribute("data-ingredients") || "")) || []; }\n        catch { ing = []; }\n        if (ing.length === 0) ing.push({ item: "", quantity: "", unit: "" });\n        for (const row of ing) addIngredientRow({\n          item: row.item || "",\n          quantity: typeof row.quantity === "number" ? row.quantity : "",\n          unit: row.unit || ""\n        });\n\n        stepsList.innerHTML = "";\n        let st = [];\n        try { st = JSON.parse(decodeURIComponent(d.getAttribute("data-steps") || "")) || []; }\n        catch { st = []; }\n        if (st.length === 0) st.push("");\n        for (const s of st) addStepRowEl(s);\n      }\n\n      addIngRow.addEventListener("click", () => addIngredientRow());\n      addStepRow.addEventListener("click", () => addStepRowEl());\n\n      const openEditBtn = document.getElementById("openEdit");\n      const closeEditBtn = document.getElementById("closeEdit");\n      const cancelEditBtn = document.getElementById("cancelEdit");\n      openEditBtn.addEventListener("click", () => { fillFormFromDataset(); openModal(); });\n      closeEditBtn.addEventListener("click", () => closeModal());\n      cancelEditBtn.addEventListener("click", (e) => { e.preventDefault(); closeModal(); });\n      editModal.addEventListener("click", (e) => {\n        if (e.target === editModal.firstElementChild) closeModal();\n      });\n\n      editForm.addEventListener("submit", async (e) => {\n        e.preventDefault();\n        editStatus.textContent = "Enregistrement\u2026";\n\n        const ingRows = Array.from(ingList.querySelectorAll(".ingredient-row"));\n        const ingredients = ingRows.map((row) => {\n          const inputs = row.querySelectorAll("input");\n          const item = inputs[0].value.trim();\n          const qRaw = inputs[1].value.trim();\n          const unit = inputs[2].value.trim();\n          if (!item) return null;\n          const obj = { item };\n          if (qRaw !== "" && !isNaN(Number(qRaw))) obj.quantity = Number(qRaw);\n          if (unit) obj.unit = unit;\n          return obj;\n        }).filter(Boolean);\n\n        const stepInputs = Array.from(stepsList.querySelectorAll(".step-row input"));\n        const steps = stepInputs.map(el => el.value.trim()).filter(Boolean);\n\n        const payload = {\n          id: recipeId,\n          title: eTitle.value.trim(),\n          image: eImage.value.trim(),\n          maman: !!eMaman.checked,\n          salt: (eSalt.value === "salty"),\n          ingredients,\n          steps,\n        };\n\n        try {\n          const res = await fetch("/api/update-recipe", {\n            method: "PATCH",\n            headers: { "Content-Type": "application/json" },\n            body: JSON.stringify(payload),\n          });\n          if (!res.ok) {\n            const txt = await res.text().catch(() => "");\n            throw new Error("HTTP " + res.status + " " + txt);\n          }\n          editStatus.textContent = "\u2705 Modifications enregistr\xE9es";\n          setTimeout(() => window.location.reload(), 400);\n        } catch (err) {\n          console.error(err);\n          editStatus.textContent = "\u274C Erreur lors de l\'enregistrement";\n        }\n      });\n\n      // ----- Suppression -----\n      const deleteTopBtn = document.getElementById("deleteRecipe");\n      const deleteModalBtn = document.getElementById("dangerDelete");\n\n      async function doDelete() {\n        if (!recipeId) return;\n        const ok = confirm("Supprimer d\xE9finitivement cette recette ?\\nElle sera retir\xE9e aussi du planning si elle y est utilis\xE9e.");\n        if (!ok) return;\n        try {\n          const res = await fetch(`/api/delete-recipe?id=${encodeURIComponent(recipeId)}`, {\n            method: "DELETE",\n            headers: { "Content-Type": "application/json" },\n          });\n          if (!res.ok) {\n            const txt = await res.text().catch(() => "");\n            throw new Error("HTTP " + res.status + " " + txt);\n          }\n          const data = await res.json().catch(() => ({}));\n          const target = data?.redirect || "/recipes";\n          try {\n            window.location.replace(target);\n          } catch {\n            window.location.replace("/recettes");\n          }\n        } catch (err) {\n          console.error("delete error:", err);\n          alert("Impossible de supprimer la recette.");\n        }\n      }\n\n      deleteTopBtn.addEventListener("click", doDelete);\n      deleteModalBtn.addEventListener("click", doDelete);\n    });\n  <\/script> '], [" ", '<div class="container mx-auto px-4 py-12"> ', ' </div> <script>\n    document.addEventListener("DOMContentLoaded", () => {\n      // ----- Bouton + si ?day=... -----\n      const params = new URLSearchParams(window.location.search);\n      const dayParam = (params.get("day") || "").toLowerCase();\n      const addBtnContainer = document.getElementById("addBtnContainer");\n      const dataEl = document.getElementById("recipe-data");\n      const recipeId = dataEl ? dataEl.getAttribute("data-id") : null;\n\n      if (dayParam && recipeId) {\n        const btn = document.createElement("button");\n        btn.type = "button";\n        btn.className =\n          "inline-flex h-10 w-10 items-center justify-center rounded-full bg-white/90 " +\n          "text-green-600 ring-1 ring-green-200 shadow hover:bg-white hover:text-green-700 hover:ring-green-300 transition";\n        btn.title = \\`Ajouter au \\${dayParam}\\`;\n        btn.setAttribute("aria-label", \\`Ajouter cette recette au \\${dayParam}\\`);\n        btn.innerHTML =\n          \'<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" viewBox="0 0 24 24" fill="none" stroke="currentColor">\' +\n          \'<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16M20 12H4" />\' +\n          "</svg>";\n        btn.addEventListener("click", async () => {\n          try {\n            const res = await fetch("/api/assign-recipe", {\n              method: "POST",\n              headers: { "Content-Type": "application/json" },\n              body: JSON.stringify({ day: dayParam, id: recipeId }),\n            });\n            if (!res.ok) throw new Error("assign failed");\n            window.location.href = "/";\n          } catch (err) {\n            console.error("Assignation \xE9chou\xE9e:", err);\n            alert("Impossible d\u2019ajouter la recette au planning.");\n          }\n        });\n        addBtnContainer.appendChild(btn);\n      }\n\n      // ----- \xC9dition & suppression -----\n      const openEdit = document.getElementById("openEdit");\n      const editModal = document.getElementById("editModal");\n      const closeEdit = document.getElementById("closeEdit");\n      const cancelEdit = document.getElementById("cancelEdit");\n      const editForm = document.getElementById("editRecipeForm");\n      const editStatus = document.getElementById("editStatus");\n\n      const eTitle = document.getElementById("eTitle");\n      const eImage = document.getElementById("eImage");\n      const eMaman = document.getElementById("eMaman");\n      const eSalt = document.getElementById("eSalt");\n      const ingList = document.getElementById("ingList");\n      const addIngRow = document.getElementById("addIngRow");\n      const stepsList = document.getElementById("stepsList");\n      const addStepRow = document.getElementById("addStepRow");\n\n      function openModal() { editModal.classList.remove("hidden"); }\n      function closeModal() { editModal.classList.add("hidden"); editStatus.textContent = ""; }\n\n      function addIngredientRow(values = { item: "", quantity: "", unit: "" }) {\n        const row = document.createElement("div");\n        row.className = "ingredient-row grid grid-cols-7 gap-2";\n        row.innerHTML = \\`\n          <input type="text" placeholder="Ingr\xE9dient" class="col-span-3 rounded-lg border border-gray-300 px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-emerald-400" value="\\${values.item || ""}" required>\n          <input type="number" step="any" placeholder="Qt\xE9" class="col-span-2 rounded-lg border border-gray-300 px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-emerald-400" value="\\${values.quantity ?? ""}">\n          <input type="text" placeholder="Unit\xE9" class="col-span-1 rounded-lg border border-gray-300 px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-emerald-400" value="\\${values.unit || ""}">\n          <button type="button" class="col-span-1 rounded-md border border-gray-200 hover:bg-gray-50 text-gray-600 text-sm" title="Supprimer">\u2715</button>\n        \\`;\n        const delBtn = row.querySelector("button");\n        delBtn.addEventListener("click", () => row.remove());\n        ingList.appendChild(row);\n      }\n\n      function addStepRowEl(value = "") {\n        const row = document.createElement("div");\n        row.className = "step-row grid grid-cols-6 gap-2";\n        row.innerHTML = \\`\n          <input type="text" placeholder="D\xE9crire l\u2019\xE9tape\u2026" class="col-span-5 w-full rounded-lg border border-gray-300 px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-emerald-400" value="\\${value}">\n          <button type="button" class="col-span-1 rounded-md border border-gray-200 hover:bg-gray-50 text-gray-600 text-sm" title="Supprimer">\u2715</button>\n        \\`;\n        const delBtn = row.querySelector("button");\n        delBtn.addEventListener("click", () => row.remove());\n        stepsList.appendChild(row);\n      }\n\n      function fillFormFromDataset() {\n        const d = document.getElementById("recipe-data");\n        if (!d) return;\n        eTitle.value = d.getAttribute("data-title") || "";\n        eImage.value = d.getAttribute("data-image") || "";\n        eMaman.checked = d.getAttribute("data-maman") === "true";\n        eSalt.value = (d.getAttribute("data-salt") === "true") ? "salty" : "sweet";\n\n        ingList.innerHTML = "";\n        let ing = [];\n        try { ing = JSON.parse(decodeURIComponent(d.getAttribute("data-ingredients") || "")) || []; }\n        catch { ing = []; }\n        if (ing.length === 0) ing.push({ item: "", quantity: "", unit: "" });\n        for (const row of ing) addIngredientRow({\n          item: row.item || "",\n          quantity: typeof row.quantity === "number" ? row.quantity : "",\n          unit: row.unit || ""\n        });\n\n        stepsList.innerHTML = "";\n        let st = [];\n        try { st = JSON.parse(decodeURIComponent(d.getAttribute("data-steps") || "")) || []; }\n        catch { st = []; }\n        if (st.length === 0) st.push("");\n        for (const s of st) addStepRowEl(s);\n      }\n\n      addIngRow.addEventListener("click", () => addIngredientRow());\n      addStepRow.addEventListener("click", () => addStepRowEl());\n\n      const openEditBtn = document.getElementById("openEdit");\n      const closeEditBtn = document.getElementById("closeEdit");\n      const cancelEditBtn = document.getElementById("cancelEdit");\n      openEditBtn.addEventListener("click", () => { fillFormFromDataset(); openModal(); });\n      closeEditBtn.addEventListener("click", () => closeModal());\n      cancelEditBtn.addEventListener("click", (e) => { e.preventDefault(); closeModal(); });\n      editModal.addEventListener("click", (e) => {\n        if (e.target === editModal.firstElementChild) closeModal();\n      });\n\n      editForm.addEventListener("submit", async (e) => {\n        e.preventDefault();\n        editStatus.textContent = "Enregistrement\u2026";\n\n        const ingRows = Array.from(ingList.querySelectorAll(".ingredient-row"));\n        const ingredients = ingRows.map((row) => {\n          const inputs = row.querySelectorAll("input");\n          const item = inputs[0].value.trim();\n          const qRaw = inputs[1].value.trim();\n          const unit = inputs[2].value.trim();\n          if (!item) return null;\n          const obj = { item };\n          if (qRaw !== "" && !isNaN(Number(qRaw))) obj.quantity = Number(qRaw);\n          if (unit) obj.unit = unit;\n          return obj;\n        }).filter(Boolean);\n\n        const stepInputs = Array.from(stepsList.querySelectorAll(".step-row input"));\n        const steps = stepInputs.map(el => el.value.trim()).filter(Boolean);\n\n        const payload = {\n          id: recipeId,\n          title: eTitle.value.trim(),\n          image: eImage.value.trim(),\n          maman: !!eMaman.checked,\n          salt: (eSalt.value === "salty"),\n          ingredients,\n          steps,\n        };\n\n        try {\n          const res = await fetch("/api/update-recipe", {\n            method: "PATCH",\n            headers: { "Content-Type": "application/json" },\n            body: JSON.stringify(payload),\n          });\n          if (!res.ok) {\n            const txt = await res.text().catch(() => "");\n            throw new Error("HTTP " + res.status + " " + txt);\n          }\n          editStatus.textContent = "\u2705 Modifications enregistr\xE9es";\n          setTimeout(() => window.location.reload(), 400);\n        } catch (err) {\n          console.error(err);\n          editStatus.textContent = "\u274C Erreur lors de l\'enregistrement";\n        }\n      });\n\n      // ----- Suppression -----\n      const deleteTopBtn = document.getElementById("deleteRecipe");\n      const deleteModalBtn = document.getElementById("dangerDelete");\n\n      async function doDelete() {\n        if (!recipeId) return;\n        const ok = confirm("Supprimer d\xE9finitivement cette recette ?\\\\nElle sera retir\xE9e aussi du planning si elle y est utilis\xE9e.");\n        if (!ok) return;\n        try {\n          const res = await fetch(\\`/api/delete-recipe?id=\\${encodeURIComponent(recipeId)}\\`, {\n            method: "DELETE",\n            headers: { "Content-Type": "application/json" },\n          });\n          if (!res.ok) {\n            const txt = await res.text().catch(() => "");\n            throw new Error("HTTP " + res.status + " " + txt);\n          }\n          const data = await res.json().catch(() => ({}));\n          const target = data?.redirect || "/recipes";\n          try {\n            window.location.replace(target);\n          } catch {\n            window.location.replace("/recettes");\n          }\n        } catch (err) {\n          console.error("delete error:", err);\n          alert("Impossible de supprimer la recette.");\n        }\n      }\n\n      deleteTopBtn.addEventListener("click", doDelete);\n      deleteModalBtn.addEventListener("click", doDelete);\n    });\n  <\/script> '])), maybeRenderHead(), recipe ? renderTemplate`${renderComponent($$result2, "Fragment", Fragment, {}, { "default": async ($$result3) => renderTemplate` <div class="relative"> <div class="overflow-hidden rounded-xl shadow-lg mb-8"> <img${addAttribute(recipe.image || DEFAULT_IMG, "src")}${addAttribute(recipe.title, "alt")} class="w-full h-72 object-cover transform hover:scale-105 transition duration-500"${addAttribute(`this.src='${DEFAULT_IMG}'`, "onerror")}> </div> <div id="addBtnContainer" class="absolute right-4 top-4"></div> </div> <div class="flex items-start justify-between gap-4 mb-6"> <h1 class="text-3xl md:text-4xl font-extrabold text-gray-900"> ${recipe.title} </h1> <div class="flex items-center gap-2"> <button id="openEdit" class="inline-flex items-center gap-2 rounded-lg border border-gray-200 bg-white px-3 py-2 text-sm font-medium text-gray-800 shadow-sm hover:bg-gray-50 transition" title="Modifier la recette">
Modifier
</button> <button id="deleteRecipe" class="inline-flex items-center gap-2 rounded-lg bg-rose-600 px-3 py-2 text-sm font-medium text-white shadow hover:bg-rose-700 transition" title="Supprimer la recette">
Supprimer
</button> </div> </div> <div class="grid gap-8 md:grid-cols-2"> <section class="bg-yellow-50 rounded-xl p-6 shadow-lg hover:shadow-2xl transition"> <h2 class="flex items-center text-2xl font-semibold mb-4 text-yellow-800"> <span class="mr-2">🛒</span> Ingrédients
</h2> <ul class="list-disc list-inside space-y-2 text-gray-700"> ${recipe.ingredients.map((i) => renderTemplate`<li> ${typeof i === "object" && i.quantity ? `${i.item}: ${i.quantity} ${i.unit || ""}` : typeof i === "object" ? i.item : i} </li>`)} </ul> </section> <section class="bg-green-50 rounded-xl p-6 shadow-lg hover:shadow-2xl transition"> <h2 class="flex items-center text-2xl font-semibold mb-4 text-green-800"> <span class="mr-2">👩‍🍳</span> Préparation
</h2> <ol class="list-decimal list-inside space-y-2 text-gray-700"> ${recipe.steps.map((s) => renderTemplate`<li>${s}</li>`)} </ol> </section> </div> <div class="mt-12 text-center"> <a href="/recipes" class="inline-block bg-blue-500 hover:bg-blue-600 text-white font-medium py-3 px-6 rounded-xl shadow-lg transition transform hover:-translate-y-1">
← Retour à toutes les recettes
</a> </div> <div id="recipe-data"${addAttribute(recipe.id, "data-id")}${addAttribute(recipe.title, "data-title")}${addAttribute(recipe.image || "", "data-image")}${addAttribute(encodeURIComponent(JSON.stringify(recipe.ingredients || [])), "data-ingredients")}${addAttribute(encodeURIComponent(JSON.stringify(recipe.steps || [])), "data-steps")}${addAttribute(String(!!recipe.maman), "data-maman")}${addAttribute(String(!!recipe.salt), "data-salt")} class="hidden"></div> <div id="editModal" class="fixed inset-0 z-50 hidden"> <div class="absolute inset-0 bg-black/40"></div> <div class="relative mx-auto my-8 max-w-2xl rounded-2xl bg-white p-5 shadow-xl"> <div class="flex items-center justify-between mb-3"> <h2 class="text-lg font-semibold text-gray-900">Modifier la recette</h2> <button id="closeEdit" class="rounded-md p-2 hover:bg-gray-100" aria-label="Fermer">✕</button> </div> <form id="editRecipeForm" class="space-y-4"> <div> <label class="block text-sm font-medium text-gray-700 mb-1">Titre *</label> <input id="eTitle" type="text" class="w-full rounded-lg border border-gray-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-emerald-400" required> </div> <div> <label class="block text-sm font-medium text-gray-700 mb-1">Image (URL)</label> <input id="eImage" type="url" placeholder="https://…" class="w-full rounded-lg border border-gray-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-emerald-400"> </div> <div class="grid grid-cols-1 sm:grid-cols-2 gap-3"> <label class="inline-flex items-center gap-2"> <input id="eMaman" type="checkbox" class="h-5 w-5 rounded border-gray-300 text-emerald-600 focus:ring-2 focus:ring-emerald-400"> <span class="text-sm text-gray-800">Recette de maman</span> </label> <div> <label class="block text-sm font-medium text-gray-700 mb-1">Type *</label> <select id="eSalt" class="w-full rounded-lg border border-gray-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-emerald-400"> <option value="salty">Salé</option> <option value="sweet">Sucré</option> </select> </div> </div> <div> <div class="flex items-center justify-between mb-2"> <label class="block text-sm font-medium text-gray-700">Ingrédients *</label> <button type="button" id="addIngRow" class="text-emerald-600 hover:text-emerald-700 text-sm">
➕ Ajouter un ingrédient
</button> </div> <div id="ingList" class="space-y-2"></div> </div> <div> <div class="flex items-center justify-between mb-2"> <label class="block text-sm font-medium text-gray-700">Étapes *</label> <button type="button" id="addStepRow" class="text-emerald-600 hover:text-emerald-700 text-sm">
➕ Ajouter une étape
</button> </div> <div id="stepsList" class="space-y-2"></div> </div> <div class="flex items-center justify-between gap-3 pt-2"> <button type="button" id="cancelEdit" class="rounded-lg border border-gray-300 px-4 py-2 text-sm hover:bg-gray-50">Annuler</button> <div class="flex items-center gap-3"> <button type="button" id="dangerDelete" class="inline-flex items-center gap-2 rounded-lg bg-rose-600 px-4 py-2 text-sm font-medium text-white hover:bg-rose-700 transition">
Supprimer la recette
</button> <button type="submit" class="inline-flex items-center gap-2 rounded-lg bg-emerald-600 px-4 py-2 text-sm font-medium text-white hover:bg-emerald-700 active:scale-[0.98] transition">
Enregistrer
</button> </div> </div> <p id="editStatus" class="text-sm text-gray-500 mt-1"></p> </form> </div> </div> ` })}` : renderTemplate`<p class="text-center text-gray-500">Recette introuvable.</p>`) })}`;
}, "/Users/jeremy/code/JBeaussart/cookingcalendar/src/pages/recipes/[id].astro", void 0);

const $$file = "/Users/jeremy/code/JBeaussart/cookingcalendar/src/pages/recipes/[id].astro";
const $$url = "/recipes/[id]";

const _page = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
  __proto__: null,
  default: $$id,
  file: $$file,
  url: $$url
}, Symbol.toStringTag, { value: 'Module' }));

const page = () => _page;

export { page };
