---
import Layout from "../layouts/Layout.astro";
import { db } from "../firebase";
import { collection, getDocs } from "firebase/firestore";

let recipes = [];
const snapshot = await getDocs(collection(db, "recipes"));
recipes = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));

const planningSnapshot = await getDocs(collection(db, "planning"));
const selectedRecipes = planningSnapshot.docs
  .map(d => recipes.find(r => r.id === d.data().recipeId))
  .filter(Boolean);
---

<Layout title="Liste de courses">
  <div class="container mx-auto px-4 py-8">
    <h1 class="text-3xl font-bold mb-6 text-center text-green-600">ðŸ›’ Liste de courses</h1>

    <div id="shoppingList" class="bg-white rounded-lg shadow p-6 border border-gray-200">
      {selectedRecipes.length === 0 ? (
        <p class="text-gray-700 text-center">Choisis d'abord tes recettes dans le planning pour gÃ©nÃ©rer la liste.</p>
      ) : (
        <ul class="space-y-2">
          {selectedRecipes.map(recipe => recipe.ingredients.map((i) => (
            <li class="flex items-center justify-between p-2 border rounded">
              <label>
                <input type="checkbox" class="mr-2 h-5 w-5 text-green-600">
                {i}
              </label>
            </li>
          )))}
        </ul>
      )}
    </div>

    <div class="mt-4 flex justify-center">
      <button id="clearAllBtn" class="bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700 transition">
        Supprimer tous les Ã©lÃ©ments
      </button>
    </div>
  </div>

  <script type="module">
    const shoppingList = document.getElementById("shoppingList");
    const clearBtn = document.getElementById("clearAllBtn");
    const checkboxes = shoppingList.querySelectorAll("input[type=checkbox]");

    // Charger Ã©tat des checkboxes depuis localStorage
    checkboxes.forEach(cb => {
      const key = cb.nextSibling.textContent.trim();
      cb.checked = localStorage.getItem(`checkbox-${key}`) === "true";
      cb.addEventListener("change", () => {
        localStorage.setItem(`checkbox-${key}`, cb.checked);
      });
    });

    // Supprimer tous les Ã©lÃ©ments (rÃ©initialiser checkboxes et storage)
    clearBtn.addEventListener("click", () => {
      checkboxes.forEach(cb => cb.checked = false);
      Array.from(localStorage.keys())
        .filter(k => k.startsWith("checkbox-"))
        .forEach(k => localStorage.removeItem(k));
    });
  </script>
</Layout>
